# If no schema.sql file is defined, and you use hibernate auto ddl,
# then the data.sql file is run before Hibernate is initialized.
# So you want to defer the initialization of the sql source to after Hibernate is running.
# spring.jpa.defer-datasource-initialization=true
# spring.jpa.generate-ddl=true

# load schema and data files
spring.sql.init.enabled=true 

# h2 config
spring.h2.console.enabled=true
spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;IGNORECASE=TRUE;
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# tell spring to look for schema-*.sql
spring.sql.init.platform=h2
# prevent hibernate from creating database from entities
spring.jpa.hibernate.ddl-auto=update

logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
spring.jpa.show-sql=true

#for emailing
#spring.mail.host=smtp.gmail.com
#spring.mail.port=587
#spring.mail.username=zephan.wong@isssecurity.sg
#spring.mail.password=avdfhveswyonpuwq
#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.starttls.espring.mail.host=smtp.gmail.com
##spring.mail.port=465
##spring.mail.username=zephan.wong@isssecurity.sg
##spring.mail.password=avdfhveswyonpuwq
##
### Other properties
##spring.mail.properties.mail.smtp.auth=true
##spring.mail.properties.mail.smtp.connectiontimeout=5000
##spring.mail.properties.mail.smtp.timeout=5000
##spring.mail.properties.mail.smtp.writetimeout=5000
##
### TLS , port 587
##spring.mail.properties.mail.smtp.starttls.enable=true
##
##spring.mail.properties.mail.smtp.socketFactory.port = 465
##spring.mail.properties.mail.smtp.socketFactory.class = javax.net.ssl.SSLSocketFactorynable=true

#